services:
  # Define the database service
  database:
    image: tugboatqa/mariadb:10.5
    commands:
      # Configure the database for better performance
      init:
        - mysql -e "SET GLOBAL max_allowed_packet=536870912;"
        - echo "max_allowed_packet=536870912" >> /etc/mysql/conf.d/tugboat.cnf

  # Define the PHP/Apache service
  php:
    image: tugboatqa/php:8.1-apache
    default: true
    depends: database
    commands:
      init:
        # Increase PHP memory limit
        - echo "memory_limit = 512M" >> /usr/local/etc/php/conf.d/memory-limit.ini
        
        # Install required PHP extensions and Apache modules
        - docker-php-ext-install opcache
        - a2enmod headers rewrite

        # Link the document root to the expected path
        - ln -snf "${TUGBOAT_ROOT}/web" "${DOCROOT}"

        # Create necessary directories
        - mkdir -p "${TUGBOAT_ROOT}/files-private"
        - mkdir -p "${DOCROOT}/sites/default/files/translations"

        # Set proper file permissions
        - chgrp -R www-data "${DOCROOT}/sites/default/files"
        - find "${DOCROOT}/sites/default/files" -type d -exec chmod 2775 {} \;
        - find "${DOCROOT}/sites/default/files" -type f -exec chmod 0664 {} \;

        # Create symlink for drush
        - ln -snf "${TUGBOAT_ROOT}/vendor/bin/drush" /usr/local/bin/drush

      update:
        # Ensure settings.php exists and is writable
        - cp "${DOCROOT}/sites/default/default.settings.php" "${DOCROOT}/sites/default/settings.php"
        - chmod 777 "${DOCROOT}/sites/default/settings.php"
        
        # Copy and include Tugboat-specific settings
        - cp "${TUGBOAT_ROOT}/.tugboat/settings.local.php" "${DOCROOT}/sites/default/settings.local.php"
        - echo "include __DIR__ . '/settings.local.php';" >> "${DOCROOT}/sites/default/settings.php"
        
        # Set proper permissions
        - chmod 644 "${DOCROOT}/sites/default/settings.php"
        - chmod 644 "${DOCROOT}/sites/default/settings.local.php"

        # Install/update packages managed by composer
        - composer install --optimize-autoloader
        - composer require --dev drupal/stage_file_proxy

      build:
        # First ensure database is accessible
        - until mysql -h database -u tugboat -ptugboat -e "SHOW DATABASES;" tugboat; do sleep 5; done
        
        # Install Drupal with Demo Umami profile
        - vendor/bin/drush site:install demo_umami --yes --account-name=admin --account-pass=admin --db-url=mysql://tugboat:tugboat@database/tugboat
        
        # Enable required modules
        - vendor/bin/drush pm:enable -y admin_toolbar admin_toolbar_tools admin_toolbar_search
        - vendor/bin/drush pm:enable -y ai ai_content ai_provider_openai key
        
        # Import configuration
        - vendor/bin/drush config:import -y
        - vendor/bin/drush updatedb -y
        - vendor/bin/drush cache:rebuild

        # Enable and configure stage_file_proxy
        - vendor/bin/drush pm:enable --yes stage_file_proxy
        - vendor/bin/drush config:set --yes stage_file_proxy.settings origin "https://www.example.com"
        - vendor/bin/drush config:set --yes stage_file_proxy.settings origin_dir "sites/default/files"

        # Final cache rebuild
        - vendor/bin/drush cache:rebuild